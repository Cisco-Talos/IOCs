{"type": "bundle", "spec_version": "2.0", "id": "bundle--d3b9043a-a3f7-4319-a281-293f1b84556a", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--9371bb0e-2e4e-4997-a071-2fd69a093273", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "MaaS operation using Emmenhtal and Amadey linked to threats against Ukrainian entities", "published": "2025-07-15T13:58:34Z", "object_refs": ["observed-data--3cafe297-97e4-400b-8f7f-7ddd825a929d", "x-misp-attribute--8cdaea87-c3cd-47c6-a448-b5ad1bcfc51a", "indicator--eb98b8e6-bc85-4398-b561-624f802a75f3", "indicator--62feee42-9b5f-4263-9266-d5ed70061677", "indicator--f638f05e-0481-4a76-8bca-021f24b960fa", "indicator--a0c630c8-0d31-4a37-a3b8-a8db24f4c64f", "indicator--b22fd1d0-2d7a-423f-abc1-94ba6bc377b6", "indicator--0d34cff3-e882-4f20-97fc-70dc9953c0ec", "indicator--46b32586-9183-43c4-ad63-8a96cf41fff1", "indicator--3c4fa8c2-4dd1-4292-9b13-6346f2098202", "indicator--cc73ebe6-2591-48f1-9a54-ebf5a3936c06", "indicator--91585f5c-92fc-438d-89d4-68def1404524", "indicator--4f51a95c-f32d-45ce-8a2e-6fd8c07c4b9f", "indicator--a6dab8c4-1f0b-4066-9292-f5356ad3141c", "indicator--e7ef53b3-4d6e-4f43-b955-6519f53f2aff", "malware--77f2c81f-be07-475a-8d77-f59b4847f696", "attack-pattern--dc27c2ec-c5f9-4228-ba57-d67b590bda93", "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736", "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1", "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\"", " TLP:WHITE", "Talos_Intel_Blog"]}, {"type": "observed-data", "id": "observed-data--3cafe297-97e4-400b-8f7f-7ddd825a929d", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:37:14.000Z", "modified": "2025-07-15T13:37:14.000Z", "first_observed": "2025-07-15T13:37:14Z", "last_observed": "2025-07-15T13:37:14Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/amadey-emmenhtal-maas"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "x-misp-attribute", "id": "x-misp-attribute--8cdaea87-c3cd-47c6-a448-b5ad1bcfc51a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:39:26.000Z", "modified": "2025-07-15T13:39:26.000Z", "labels": ["misp:type=\"text\"", "misp:category=\"Payload type\""], "x_misp_category": "Payload type", "x_misp_comment": "Emmenhtal attribute", "x_misp_type": "text", "x_misp_value": "Emmenhtal"}, {"type": "indicator", "id": "indicator--eb98b8e6-bc85-4398-b561-624f802a75f3", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[file:hashes.SHA256 = '87618787e1032bbf6a6ca8b3388ea3803be20a49e4afaba1df38a6116085062f']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--62feee42-9b5f-4263-9266-d5ed70061677", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[file:hashes.SHA256 = '718be762e8bd513283cd5e21634dc65bd160e47121716fd058daf5f3be42728a']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--f638f05e-0481-4a76-8bca-021f24b960fa", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[file:hashes.SHA256 = '9bcfc98998b9e42b86204e66605b65462eeb8cfd8a0661b3ceebc99d4277e83c']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--a0c630c8-0d31-4a37-a3b8-a8db24f4c64f", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[file:hashes.SHA256 = '21cf7da02e01b3c2317178395eff873e50ab9b8f27a23ffed37b2efff8fd6b90']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--b22fd1d0-2d7a-423f-abc1-94ba6bc377b6", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[file:hashes.SHA256 = '35c1eb5ff8913c4ca4feb712e05354772146247bdb4b337868c687730f201023']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--0d34cff3-e882-4f20-97fc-70dc9953c0ec", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[file:hashes.SHA256 = '0334cd1b8ab17203179da1ae77c1fad97ddf794cc63a6048aca664956d10b2ca']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--46b32586-9183-43c4-ad63-8a96cf41fff1", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[url:value = 'http://pivqmane.com/doc/fb.mp4']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--3c4fa8c2-4dd1-4292-9b13-6346f2098202", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[url:value = 'http://pivqmane.com/testonload.mp4']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--cc73ebe6-2591-48f1-9a54-ebf5a3936c06", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[url:value = 'http://185.215.113.16/test/amnew.exe']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--91585f5c-92fc-438d-89d4-68def1404524", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[url:value = 'http://185.215.113.43/Zu7JuNko/index.php']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--4f51a95c-f32d-45ce-8a2e-6fd8c07c4b9f", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '185.156.73.73']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--a6dab8c4-1f0b-4066-9292-f5356ad3141c", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '185.215.113.209']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--e7ef53b3-4d6e-4f43-b955-6519f53f2aff", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-07-15T13:49:27.000Z", "modified": "2025-07-15T13:49:27.000Z", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '185.215.113.75']", "valid_from": "2025-07-15T13:49:27Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "malware", "id": "malware--77f2c81f-be07-475a-8d77-f59b4847f696", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "Amadey", "description": "Malware galaxy based on Malpedia archive. | Amadey is a botnet that appeared around October 2018 and is being sold for about 500$ on Russian-speaking hacking forums. It periodically sends information about the system and installed AV software to its C2 server and polls to receive orders from it. Its main functionality is that it can load other payloads (called \"tasks\") for all or specifically targeted computers compromised by the malware.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "malpedia"}], "labels": ["misp:galaxy-name=\"Malpedia\"", "misp:galaxy-type=\"malpedia\"", "misp-galaxy:malpedia=\"Amadey\""]}, {"type": "attack-pattern", "id": "attack-pattern--dc27c2ec-c5f9-4228-ba57-d67b590bda93", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "Hidden Files and Directories - T1158", "description": "ATT&CK Tactic | To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system for persistence and evading a typical user or system analysis that does not incorporate investigation of hidden files.\n\n### Windows\n\nUsers can mark specific files as hidden by using the attrib.exe binary. Simply do <code>attrib +h filename</code> to mark a file or folder as hidden. Similarly, the \u201c+s\u201d marks a file as a system file and the \u201c+r\u201d flag marks the file as read only. Like most windows binaries, the attrib.exe binary provides the ability to apply these changes recursively \u201c/S\u201d.\n\n### Linux/Mac\n\nUsers can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folder that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable. For command line usages, there is typically a flag to see all files (including hidden ones). To view these files in the Finder Application, the following command must be executed: <code>defaults write com.apple.finder AppleShowAllFiles YES</code>, and then relaunch the Finder Application.\n\n### Mac\n\nFiles on macOS can be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker).\nMany applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Hidden Files and Directories - T1158\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1158"}]}, {"type": "attack-pattern", "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "PowerShell - T1059.001", "description": "ATT&CK Tactic | Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"PowerShell - T1059.001\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059.001"}]}, {"type": "attack-pattern", "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "Process Injection - T1055", "description": "ATT&CK Tactic | Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Process Injection - T1055\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-640"}]}, {"type": "attack-pattern", "id": "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "Python - T1059.006", "description": "ATT&CK Tactic | Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Python - T1059.006\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059.006"}]}, {"type": "attack-pattern", "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "Obfuscated Files or Information - T1027", "description": "ATT&CK Tactic | Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Obfuscated Files or Information - T1027\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-267"}]}, {"type": "attack-pattern", "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d", "created": "2025-07-15T13:58:34.000Z", "modified": "2025-07-15T13:58:34.000Z", "name": "JavaScript - T1059.007", "description": "ATT&CK Tactic | Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"JavaScript - T1059.007\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059.007"}]}]}
