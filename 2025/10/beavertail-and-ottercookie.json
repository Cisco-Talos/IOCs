{"type": "bundle", "spec_version": "2.0", "id": "bundle--1a9f39ec-7ac2-4a10-8f23-7ca7a10842ee", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--241ce91e-45fd-4169-9b5b-2e4ade67e54a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "BeaverTail and OtterCookie evolve with a new Javascript module", "published": "2025-10-16T09:00:34Z", "object_refs": ["indicator--fca3eb35-75ba-4e8f-ac0b-825784588b5f", "indicator--0ccbbf1e-ea56-4eac-9971-0d4e13575221", "indicator--3d22aaed-9711-4458-97d4-ed79aca76b51", "indicator--24ddab89-007f-4c28-8ec2-6b43b16c3172", "indicator--2534d977-d5d7-4fc1-a70d-9a7a77587680", "indicator--956db7f8-a6c6-422b-8aea-3c2bb6951b3e", "indicator--99638bb9-c26e-45a1-9c41-8f776a96429d", "indicator--951616db-e4c1-41da-9881-9386a6679b3e", "indicator--ad58dfc8-7669-482f-9026-3f4675cecf80", "indicator--6bb50096-3f64-453f-b9a6-e190d1ea8e79", "indicator--64a8d016-db1f-4335-9fe5-12030526eeb2", "indicator--0b82d094-99cd-45f7-99d5-9ff95291904c", "indicator--5a28af52-d461-4f14-b771-7e2752dc357d", "indicator--cccc1ab6-050b-4d37-91ac-e6d6035c0ecc", "indicator--b842904b-bcef-440b-9455-4e7a7e2501f0", "indicator--6992a6c4-6b08-4058-ba29-9551c3c439c0", "indicator--957933e7-df4c-47a9-8c36-74f5fda434af", "indicator--4a9a93c7-48a8-45ac-8dba-bcb9c2708598", "indicator--f340e6ae-fd2d-462c-bae0-aa2b521025d5", "indicator--918024eb-4d8e-43ea-9830-ae1774b62246", "indicator--cee3ae98-7894-410a-9d78-345d576a01ed", "indicator--cda9b913-c9e9-4223-b74b-e8b131ee5b11", "indicator--c1bf4d61-54b4-41f9-87d6-796bfc802434", "indicator--23aa844a-a260-427a-9451-6f859bf7c345", "indicator--9fa236ef-f535-4595-83c9-85b0f78590a7", "indicator--14109823-f648-4cd9-92f4-68013cefba8e", "indicator--76c7ec06-6596-417e-93f5-dff492e61270", "indicator--698de153-16a7-48ff-b146-1b22ff48696e", "indicator--69786cd1-87b1-48d4-afec-cfbba4fdbecf", "indicator--c3543f47-3e88-438b-8b9b-3d0beebba38d", "indicator--36dbf942-91df-47cb-9feb-9f68cb28cb6a", "indicator--37109f27-45cf-45aa-bbbb-87757377dca4", "observed-data--ae256905-7eb3-4c46-9422-29479ce82536", "attack-pattern--6ee2dc99-91ad-4534-a7d8-a649358c331f", "attack-pattern--76551c52-b111-4884-bc47-ff3e728f0156", "attack-pattern--bbe5b322-e2af-4a5e-9625-a4e62bf84ed3", "attack-pattern--212306d8-efa4-44c9-8c2d-ed3d2e224aa0", "attack-pattern--b1ccd744-3f78-4a0e-9bb2-2002057f7928", "attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7", "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925", "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65", "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d", "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e", "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc", "attack-pattern--4579d9c9-d5b9-45e0-9848-0104637b579f", "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8", "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2", "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4", "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18", "attack-pattern--c848fcf7-6b62-4bde-8216-b6c157d48da0", "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9", "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\"", "tlp:clear", "recorded-future:threat-actor=Famous Chollima", "DPRK"]}, {"type": "indicator", "id": "indicator--fca3eb35-75ba-4e8f-ac0b-825784588b5f", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = 'f08e3ee84714cc5faefb7ac300485c879356922003d667587c58d594d875294e']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--0ccbbf1e-ea56-4eac-9971-0d4e13575221", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = '72ebfe69c69d2dd173bb92013ab44d895a3367f91f09e3f8d18acab44e37b26d']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--3d22aaed-9711-4458-97d4-ed79aca76b51", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = 'caad2f3d85e467629aa535e0081865d329c4cd7e6ff20a000ea07e62bf2e4394']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--24ddab89-007f-4c28-8ec2-6b43b16c3172", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = '8efa928aa896a5bb3715b8b0ed20881029b0a165a296334f6533fa9169b4463b']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--2534d977-d5d7-4fc1-a70d-9a7a77587680", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = '77aec48003beeceb88e70bed138f535e1536f4bbbdff580528068ad6d184f379']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--956db7f8-a6c6-422b-8aea-3c2bb6951b3e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = '0904eff1edeff4b6eb27f03e0ccc759d6aa8d4e1317a1e6f6586cdb84db4a731']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--99638bb9-c26e-45a1-9c41-8f776a96429d", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = 'd27c9f75c3f1665ee19642381a4dd6f2e4038540442cf50948b43f418730fd0a']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--951616db-e4c1-41da-9881-9386a6679b3e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = '51ddd8f6ff30d76de45e06902c45c55163ddbec7d114ad89b21811ffedb71974']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--ad58dfc8-7669-482f-9026-3f4675cecf80", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = 'd89c45d65a825971d250d12bc7a449321e1977f194e52e4ca541e8a908712e47']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--6bb50096-3f64-453f-b9a6-e190d1ea8e79", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = '6a9b4e8537bb97e337627b4dd1390bdb03dc66646704bd4b68739d499bd53063']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--64a8d016-db1f-4335-9fe5-12030526eeb2", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = 'a6914ded72bdd21e2f76acde46bf92b385f9ec6f7e6b7fdb873f21438dfbff1d']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--0b82d094-99cd-45f7-99d5-9ff95291904c", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = '9e65de386b40f185bf7c1d9b1380395e5ff606c2f8373c63204a52f8ddc01982']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--5a28af52-d461-4f14-b771-7e2752dc357d", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:45:29.000Z", "modified": "2025-10-09T14:45:29.000Z", "pattern": "[file:hashes.SHA256 = 'dff2a0fb344a0ad4b2c129712b2273fda46b5ea75713d23d65d5b03d0057f6dd']", "valid_from": "2025-10-09T14:45:29Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--cccc1ab6-050b-4d37-91ac-e6d6035c0ecc", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://23.227.202.244:1224/uploads']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--b842904b-bcef-440b-9455-4e7a7e2501f0", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://23.227.202.244:1224/pdown']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--6992a6c4-6b08-4058-ba29-9551c3c439c0", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://23.227.202.244:1224/client/14/144']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--957933e7-df4c-47a9-8c36-74f5fda434af", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://23.227.202.244:1224/payload/14/144']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--4a9a93c7-48a8-45ac-8dba-bcb9c2708598", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://23.227.202.244:1224/brow/14/144']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--f340e6ae-fd2d-462c-bae0-aa2b521025d5", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://23.227.202.244:1224/keys']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--918024eb-4d8e-43ea-9830-ae1774b62246", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://172.86.88.188:1418/socket.io/']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--cee3ae98-7894-410a-9d78-345d576a01ed", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://172.86.88.188:1476/upload']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--cda9b913-c9e9-4223-b74b-e8b131ee5b11", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://172.86.88.188/api/service/makelog']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--c1bf4d61-54b4-41f9-87d6-796bfc802434", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://172.86.88.188/api/service/process/c841b6c4ac4d2e83f16cf7a8bfbec3d7']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--23aa844a-a260-427a-9451-6f859bf7c345", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://138.201.50.5:5961/upload']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--9fa236ef-f535-4595-83c9-85b0f78590a7", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://135.181.123.177/api/service/makelog']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--14109823-f648-4cd9-92f4-68013cefba8e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://144.172.96.35/api/service/makelog']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--76c7ec06-6596-417e-93f5-dff492e61270", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://144.172.112.50/api/service/makelog']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--698de153-16a7-48ff-b146-1b22ff48696e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://172.86.73.46']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--69786cd1-87b1-48d4-afec-cfbba4fdbecf", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://135.181.123.177']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--c3543f47-3e88-438b-8b9b-3d0beebba38d", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'http://172.86.113.12']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--36dbf942-91df-47cb-9feb-9f68cb28cb6a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'https://www.npmjs.com/package/node-nvm-ssh']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--37109f27-45cf-45aa-bbbb-87757377dca4", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-09T14:49:19.000Z", "modified": "2025-10-09T14:49:19.000Z", "pattern": "[url:value = 'https://bitbucket.org/dev-chess/chess-frontend.git']", "valid_from": "2025-10-09T14:49:19Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "observed-data", "id": "observed-data--ae256905-7eb3-4c46-9422-29479ce82536", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "first_observed": "2025-10-16T09:00:34Z", "last_observed": "2025-10-16T09:00:34Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/beavertail-and-ottercookie/"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "attack-pattern", "id": "attack-pattern--6ee2dc99-91ad-4534-a7d8-a649358c331f", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Business Relationships - T1591.002", "description": "ATT&CK Tactic | Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization\u2019s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Business Relationships - T1591.002\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1591.002"}]}, {"type": "attack-pattern", "id": "attack-pattern--76551c52-b111-4884-bc47-ff3e728f0156", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Employee Names - T1589.003", "description": "ATT&CK Tactic | Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Employee Names - T1589.003\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1589.003"}]}, {"type": "attack-pattern", "id": "attack-pattern--bbe5b322-e2af-4a5e-9625-a4e62bf84ed3", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Social Media - T1593.001", "description": "ATT&CK Tactic | Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim\u2019s into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).(Citation: Cyware Social Media) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Social Media - T1593.001\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1593.001"}]}, {"type": "attack-pattern", "id": "attack-pattern--212306d8-efa4-44c9-8c2d-ed3d2e224aa0", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Malware - T1587.001", "description": "ATT&CK Tactic | Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Malware - T1587.001\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1587.001"}]}, {"type": "attack-pattern", "id": "attack-pattern--b1ccd744-3f78-4a0e-9bb2-2002057f7928", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Social Media Accounts - T1585.001", "description": "ATT&CK Tactic | Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Social Media Accounts - T1585.001\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1585.001"}]}, {"type": "attack-pattern", "id": "attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Spearphishing Link - T1566.002", "description": "ATT&CK Tactic | Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). \n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Spearphishing Link - T1566.002\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-163"}]}, {"type": "attack-pattern", "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Trusted Relationship - T1199", "description": "ATT&CK Tactic | Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Trusted Relationship - T1199\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1199"}]}, {"type": "attack-pattern", "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Command and Scripting Interpreter - T1059", "description": "ATT&CK Tactic | Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Command and Scripting Interpreter - T1059\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059"}]}, {"type": "attack-pattern", "id": "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Execution through Module Load - T1129", "description": "ATT&CK Tactic | The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like CreateProcess(), LoadLibrary(), etc. of the Win32 API. (Citation: Wikipedia Windows Library Files)\n\nThe module loader can load DLLs:\n\n* via specification of the (fully-qualified or relative) DLL pathname in the IMPORT directory;\n    \n* via EXPORT forwarded to another DLL, specified with (fully-qualified or relative) pathname (but without extension);\n    \n* via an NTFS junction or symlink program.exe.local with the fully-qualified or relative pathname of a directory containing the DLLs specified in the IMPORT directory or forwarded EXPORTs;\n    \n* via <code>&#x3c;file name=\"filename.extension\" loadFrom=\"fully-qualified or relative pathname\"&#x3e;</code> in an embedded or external \"application manifest\". The file name refers to an entry in the IMPORT directory or a forwarded EXPORT.\n\nAdversaries can use this functionality as a way to execute arbitrary code on a system.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Execution through Module Load - T1129\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1129"}]}, {"type": "attack-pattern", "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "JavaScript - T1059.007", "description": "ATT&CK Tactic | Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"JavaScript - T1059.007\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059.007"}]}, {"type": "attack-pattern", "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Malicious File - T1204.002", "description": "ATT&CK Tactic | An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Malicious File - T1204.002\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1204.002"}]}, {"type": "attack-pattern", "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Credential Dumping - T1003", "description": "ATT&CK Tactic | Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform\u00a0Lateral Movement\u00a0and access restricted information.\n\nSeveral of the tools mentioned in this technique may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n\n### Windows\n\n#### SAM (Security Accounts Manager)\n\nThe SAM is a database file that contains local accounts for the host, typically those found with the \u2018net user\u2019 command. To enumerate the SAM database, system level access is required.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe \n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with [Reg](https://attack.mitre.org/software/S0075):\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes. (Citation: GitHub Creddump7)\n\nNotes:\nRid 500 account is the local, in-built administrator.\nRid 501 is the guest account.\nUser accounts start with a RID of 1,000+.\n\n#### Cached Credentials\n\nThe DCC2 (Domain Cached Credentials version 2) hash, used by Windows Vista and newer caches credentials when the domain controller is unavailable. The number of default cached credentials varies, and this number can be altered per system. This hash does not allow pass-the-hash style attacks.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n\n* pwdumpx.exe \n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nCached credentials for Windows Vista are derived using PBKDF2.\n\n#### Local Security Authority (LSA) Secrets\n\nWith SYSTEM access to a host, the LSA secrets often allows trivial access from a local account to domain-based account credentials. The Registry is used to store the LSA secrets.\n\u00a0\nWhen services are run under the context of local or domain users, their passwords are stored in the Registry. If auto-logon is enabled, this information will be stored in the Registry as well.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n\n* pwdumpx.exe \n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nThe passwords extracted by his mechanism are\u00a0UTF-16\u00a0encoded, which means that they are returned in\u00a0plaintext.\nWindows 10 adds protections for LSA Secrets described in Mitigation.\n\n#### NTDS from Domain Controller\n\nActive Directory stores information about members of the domain including devices and users to verify credentials and define access rights. The Active Directory domain database is stored in the NTDS.dit file. By default the NTDS file will be located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller. (Citation: Wikipedia Active Directory)\n \nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n\n#### Group Policy Preference (GPP) Files\n\nGroup Policy Preferences (GPP) are tools that allowed administrators to create domain policies with embedded credentials. These policies, amongst other things, allow administrators to set local accounts.\n\nThese group policies are stored in SYSVOL on a domain controller, this means that any domain user can view the SYSVOL share and decrypt the password (the AES private key was leaked on-line. (Citation: Microsoft GPP Key) (Citation: SRD GPP)\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit\u2019s post exploitation module: \"post/windows/gather/credentials/gpp\"\n* Get-GPPPassword (Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\nNotes:\nOn the SYSVOL share, the following can be used to enumerate potential XML files.\ndir /s * .xml\n\n#### Service Principal Names (SPNs)\n\nSee [Kerberoasting](https://attack.mitre.org/techniques/T1208).\n\n#### Plaintext Credentials\n\nAfter a user logs on to a system, a variety of credentials are generated and stored in the\u00a0Local Security Authority Subsystem Service\u00a0(LSASS) process in memory. These credentials can be harvested by a administrative user or SYSTEM.\n\nSSPI (Security Support Provider Interface) functions as a common interface to several Security Support Providers (SSPs):\u00a0A Security Support Provider is a\u00a0dynamic-link library\u00a0(DLL) that makes one or more security packages available to applications.\n\nThe following SSPs can be used to access credentials:\n\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. (Citation: TechNet Blogs Credential Protection)\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\nCredSSP: \u00a0Provides SSO and\u00a0Network Level Authentication\u00a0for\u00a0Remote Desktop Services. (Citation: Microsoft CredSSP)\n\u00a0\nThe following tools can be used to enumerate credentials:\n\n* [Windows Credential Editor](https://attack.mitre.org/software/S0005)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run:\n\n* <code>sekurlsa::Minidump\u00a0lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n#### DCSync\n\nDCSync is a variation on credential dumping which can be used to acquire sensitive information from a domain controller. Rather than executing recognizable malicious code, the action works by abusing the domain controller's  application programming interface (API) (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller. Any members of the Administrators, Domain Admins, Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data (Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1097) (Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098). (Citation: InsiderThreat ChangeNTLM July 2017) DCSync functionality has been included in the \"lsadump\" module in Mimikatz. (Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol. (Citation: Microsoft NRPC Dec 2017)\n\n### Linux\n\n#### Proc filesystem\n\nThe /proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively. This functionality has been implemented in the [MimiPenguin](https://attack.mitre.org/software/S0179), an open source tool inspired by [Mimikatz](https://attack.mitre.org/software/S0002). The tool dumps process memory, then harvests passwords and hashes by looking for text strings and regex patterns for how given applications such as Gnome Keyring, sshd, and Apache use memory to store such authentication artifacts.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credential Dumping - T1003\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1003"}]}, {"type": "attack-pattern", "id": "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Credentials In Files - T1552.001", "description": "ATT&CK Tactic | Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credentials In Files - T1552.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-639"}]}, {"type": "attack-pattern", "id": "attack-pattern--4579d9c9-d5b9-45e0-9848-0104637b579f", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Credentials from Web Browsers - T1503", "description": "ATT&CK Tactic | Adversaries may acquire credentials from web browsers by reading files specific to the target browser.  (Citation: Talos Olympic Destroyer 2018) \n\nWeb browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key. (Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc. (Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017)\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credentials from Web Browsers - T1503\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1503"}]}, {"type": "attack-pattern", "id": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Credentials from Web Browsers - T1555.003", "description": "ATT&CK Tactic | Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credentials from Web Browsers - T1555.003\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1555.003"}]}, {"type": "attack-pattern", "id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Input Capture - T1056", "description": "ATT&CK Tactic | Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Input Capture - T1056\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-569"}]}, {"type": "attack-pattern", "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Keylogging - T1056.001", "description": "ATT&CK Tactic | Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured.\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Keylogging - T1056.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-568"}]}, {"type": "attack-pattern", "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Application Layer Protocol - T1071", "description": "ATT&CK Tactic | Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Application Layer Protocol - T1071\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1071"}]}, {"type": "attack-pattern", "id": "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Non-Standard Port - T1571", "description": "ATT&CK Tactic | Adversaries may communicate using a protocol and port paring that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Non-Standard Port - T1571\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1571"}]}, {"type": "attack-pattern", "id": "attack-pattern--c848fcf7-6b62-4bde-8216-b6c157d48da0", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Uncommonly Used Port - T1065", "description": "ATT&CK Tactic | Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls that have been improperly configured.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Uncommonly Used Port - T1065\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1065"}]}, {"type": "attack-pattern", "id": "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Automated Exfiltration - T1020", "description": "ATT&CK Tactic | Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection. \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Automated Exfiltration - T1020\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1020"}]}, {"type": "attack-pattern", "id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d", "created": "2025-10-16T09:00:34.000Z", "modified": "2025-10-16T09:00:34.000Z", "name": "Exfiltration Over C2 Channel - T1041", "description": "ATT&CK Tactic | Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Exfiltration Over C2 Channel - T1041\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1041"}]}]}
