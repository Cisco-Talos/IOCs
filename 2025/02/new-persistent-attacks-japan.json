{"type": "bundle", "spec_version": "2.0", "id": "bundle--0fe20bee-b946-4c0e-8aa3-b2b352444e65", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--486041ad-d2c0-40a1-8166-fdbd88165c20", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Unmasking the new persistent attacks on Japan", "published": "2025-03-06T11:09:45Z", "object_refs": ["observed-data--901300a2-45df-4978-a38c-853f2a11bd41", "indicator--04860e70-4a9d-4414-bcb0-93d820198dbd", "indicator--b8b0ebd9-5ed9-47ca-a95b-2d830289fa31", "indicator--913aa652-6159-4c6c-a68f-032a8f34b002", "indicator--89194931-d8fd-44f1-b83d-701a70bf0b80", "indicator--ba2e325b-8354-4478-a221-e3346ff77bcd", "indicator--267cd87b-6af1-4e65-aaf1-2881f96415e4", "indicator--d3a45d39-69fe-4819-87ad-255d32a29dd1", "indicator--161a8555-033a-4443-9844-5c556c7a1560", "indicator--7e872161-dfb5-4169-999d-00523384bfbf", "indicator--a483897b-4d18-41c1-850e-6ff4dec7cc58", "indicator--31a2db5f-f338-4c2b-81fc-1c9118a4a362", "indicator--72a5a8dc-472e-4667-b701-2498dfb0cc48", "indicator--a8a925c1-03b5-41b3-bffb-7210016befd9", "indicator--92db731e-ff8e-4f2a-aed5-8f93458ff39a", "indicator--012bc9bb-4a7c-4068-a7b1-dc64815eefbc", "indicator--123da421-147e-4538-b077-1ad08f16fdcd", "indicator--2743f905-db1c-42bb-a03d-0a6efe5f68e7", "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104", "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839", "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4", "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9", "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5", "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2", "attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5", "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90", "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\"", "Credential Harvesting", "Mimikatz", "PowerShellCobaltStrikeBeaconReverseHTTPx64", "Talos_Intel_Blog"], "object_marking_refs": ["marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"]}, {"type": "observed-data", "id": "observed-data--901300a2-45df-4978-a38c-853f2a11bd41", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:15:25.000Z", "modified": "2025-03-06T07:15:25.000Z", "first_observed": "2025-03-06T07:15:25Z", "last_observed": "2025-03-06T07:15:25Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/new-persistent-attacks-japan/"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "indicator", "id": "indicator--04860e70-4a9d-4414-bcb0-93d820198dbd", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "C2", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '38.14.255.23']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--b8b0ebd9-5ed9-47ca-a95b-2d830289fa31", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "C2", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '118.31.18.77']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--913aa652-6159-4c6c-a68f-032a8f34b002", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "C2", "pattern": "[url:value = 'http://38.14.255.23:8077/6Qeq']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--89194931-d8fd-44f1-b83d-701a70bf0b80", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "C2", "pattern": "[url:value = 'http://38.14.255.23:8077/jANd']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--ba2e325b-8354-4478-a221-e3346ff77bcd", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = 'a2f493769c0cd1cb3518571678f071588d683703ed368830f15405c1eb4028b2']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--267cd87b-6af1-4e65-aaf1-2881f96415e4", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = '73d908725a08dcfebf300ef187dab1c5ba1c3cba8343c678df49335ba7e89e47']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--d3a45d39-69fe-4819-87ad-255d32a29dd1", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = '83290b2f6e7b3fb1bcfa90ed1e550acaeb85c7dc0cb4476b35818436af9395d2']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--161a8555-033a-4443-9844-5c556c7a1560", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = 'cec655cc4c6bfcbc336d3afc4e5537e619bcf58329d291a51f39b3d3a250e962']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--7e872161-dfb5-4169-999d-00523384bfbf", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = 'ccedc244ad5933537231139e24b4cad0df3e44d3b2944ef3b28dea5973396185']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--a483897b-4d18-41c1-850e-6ff4dec7cc58", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = 'f7396835d69675b138d0e2bee9b4ceb0a048bf705cb2f1012f1eee51e406d6e6']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--31a2db5f-f338-4c2b-81fc-1c9118a4a362", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = '6b5a75dcc505ac1c065844be27ee6d4693ac51abfc04aaf9bbfc1a06e69a19fd']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--72a5a8dc-472e-4667-b701-2498dfb0cc48", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = 'ad5f610e8fb4f0d74d5d761532c8c8b2b9e01a2a402ba89389794d15ecca8337']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--a8a925c1-03b5-41b3-bffb-7210016befd9", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = '07d8a505492566daeb6174c312a4f7114dc60efcd1d17fef12ca0b8d6303fb2b']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--92db731e-ff8e-4f2a-aed5-8f93458ff39a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "Cobalt Strike beacons", "pattern": "[file:hashes.SHA256 = '8015b6036ecbae1f9e850af6bdf361d7598201cd4d4c55ae334ed72cf17ba94d']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--012bc9bb-4a7c-4068-a7b1-dc64815eefbc", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "PowerShell", "pattern": "[file:hashes.SHA256 = '0ff87724012499381266e5eb8481117ed4549f44fa88be2c517afee899c2179f']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--123da421-147e-4538-b077-1ad08f16fdcd", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "PowerShell", "pattern": "[file:hashes.SHA256 = '829c5a07b065b15969ea8c519705d64fc4c1c39c05e898fc9abfbdb289c484d5']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--2743f905-db1c-42bb-a03d-0a6efe5f68e7", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-03-06T07:21:08.000Z", "modified": "2025-03-06T07:21:08.000Z", "description": "PowerShell", "pattern": "[file:hashes.SHA256 = '3c6511b15e3b0e8c378a549347fa0f0745fd371aaa86206cb03528fdc0a23b29']", "valid_from": "2025-03-06T07:21:08Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "attack-pattern", "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "System Owner/User Discovery - T1033", "description": "ATT&CK Tactic | Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"System Owner/User Discovery - T1033\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-577"}]}, {"type": "attack-pattern", "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Exploitation for Privilege Escalation - T1068", "description": "ATT&CK Tactic | Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Exploitation for Privilege Escalation - T1068\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1068"}]}, {"type": "attack-pattern", "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Modify Registry - T1112", "description": "ATT&CK Tactic | Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Modify Registry - T1112\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-203"}]}, {"type": "attack-pattern", "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Scheduled Task - T1053.005", "description": "ATT&CK Tactic | Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Scheduled Task - T1053.005\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1053.005"}]}, {"type": "attack-pattern", "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Create or Modify System Process - T1543", "description": "ATT&CK Tactic | Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Create or Modify System Process - T1543\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1543"}]}, {"type": "attack-pattern", "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Clear Windows Event Logs - T1070.001", "description": "ATT&CK Tactic | Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\nThe event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Clear Windows Event Logs - T1070.001\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1070.001"}]}, {"type": "attack-pattern", "id": "attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Lateral Tool Transfer - T1570", "description": "ATT&CK Tactic | Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation. Adversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).(Citation: Unit42 LockerGoga 2019)\n\nFiles can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Lateral Tool Transfer - T1570\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1570"}]}, {"type": "attack-pattern", "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Credential Dumping - T1003", "description": "ATT&CK Tactic | Credential dumping is the process of obtaining account login and password information, normally in the form of a hash or a clear text password, from the operating system and software. Credentials can then be used to perform\u00a0Lateral Movement\u00a0and access restricted information.\n\nSeveral of the tools mentioned in this technique may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n\n### Windows\n\n#### SAM (Security Accounts Manager)\n\nThe SAM is a database file that contains local accounts for the host, typically those found with the \u2018net user\u2019 command. To enumerate the SAM database, system level access is required.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe \n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with [Reg](https://attack.mitre.org/software/S0075):\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes. (Citation: GitHub Creddump7)\n\nNotes:\nRid 500 account is the local, in-built administrator.\nRid 501 is the guest account.\nUser accounts start with a RID of 1,000+.\n\n#### Cached Credentials\n\nThe DCC2 (Domain Cached Credentials version 2) hash, used by Windows Vista and newer caches credentials when the domain controller is unavailable. The number of default cached credentials varies, and this number can be altered per system. This hash does not allow pass-the-hash style attacks.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n\n* pwdumpx.exe \n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nCached credentials for Windows Vista are derived using PBKDF2.\n\n#### Local Security Authority (LSA) Secrets\n\nWith SYSTEM access to a host, the LSA secrets often allows trivial access from a local account to domain-based account credentials. The Registry is used to store the LSA secrets.\n\u00a0\nWhen services are run under the context of local or domain users, their passwords are stored in the Registry. If auto-logon is enabled, this information will be stored in the Registry as well.\n\u00a0\nA number of tools can be used to retrieve the SAM file through in-memory techniques.\n\n* pwdumpx.exe \n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, reg.exe can be used to extract from the Registry and Creddump7 used to gather the credentials.\n\nNotes:\nThe passwords extracted by his mechanism are\u00a0UTF-16\u00a0encoded, which means that they are returned in\u00a0plaintext.\nWindows 10 adds protections for LSA Secrets described in Mitigation.\n\n#### NTDS from Domain Controller\n\nActive Directory stores information about members of the domain including devices and users to verify credentials and define access rights. The Active Directory domain database is stored in the NTDS.dit file. By default the NTDS file will be located in %SystemRoot%\\NTDS\\Ntds.dit of a domain controller. (Citation: Wikipedia Active Directory)\n \nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n\n#### Group Policy Preference (GPP) Files\n\nGroup Policy Preferences (GPP) are tools that allowed administrators to create domain policies with embedded credentials. These policies, amongst other things, allow administrators to set local accounts.\n\nThese group policies are stored in SYSVOL on a domain controller, this means that any domain user can view the SYSVOL share and decrypt the password (the AES private key was leaked on-line. (Citation: Microsoft GPP Key) (Citation: SRD GPP)\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit\u2019s post exploitation module: \"post/windows/gather/credentials/gpp\"\n* Get-GPPPassword (Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\nNotes:\nOn the SYSVOL share, the following can be used to enumerate potential XML files.\ndir /s * .xml\n\n#### Service Principal Names (SPNs)\n\nSee [Kerberoasting](https://attack.mitre.org/techniques/T1208).\n\n#### Plaintext Credentials\n\nAfter a user logs on to a system, a variety of credentials are generated and stored in the\u00a0Local Security Authority Subsystem Service\u00a0(LSASS) process in memory. These credentials can be harvested by a administrative user or SYSTEM.\n\nSSPI (Security Support Provider Interface) functions as a common interface to several Security Support Providers (SSPs):\u00a0A Security Support Provider is a\u00a0dynamic-link library\u00a0(DLL) that makes one or more security packages available to applications.\n\nThe following SSPs can be used to access credentials:\n\nMsv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\nWdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges. (Citation: TechNet Blogs Credential Protection)\nKerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\nCredSSP: \u00a0Provides SSO and\u00a0Network Level Authentication\u00a0for\u00a0Remote Desktop Services. (Citation: Microsoft CredSSP)\n\u00a0\nThe following tools can be used to enumerate credentials:\n\n* [Windows Credential Editor](https://attack.mitre.org/software/S0005)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run:\n\n* <code>sekurlsa::Minidump\u00a0lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\n#### DCSync\n\nDCSync is a variation on credential dumping which can be used to acquire sensitive information from a domain controller. Rather than executing recognizable malicious code, the action works by abusing the domain controller's  application programming interface (API) (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller. Any members of the Administrators, Domain Admins, Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data (Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a Golden Ticket for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1097) (Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098). (Citation: InsiderThreat ChangeNTLM July 2017) DCSync functionality has been included in the \"lsadump\" module in Mimikatz. (Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol. (Citation: Microsoft NRPC Dec 2017)\n\n### Linux\n\n#### Proc filesystem\n\nThe /proc filesystem on Linux contains a great deal of information regarding the state of the running operating system. Processes running with root privileges can use this facility to scrape live memory of other running programs. If any of these programs store passwords in clear text or password hashes in memory, these values can then be harvested for either usage or brute force attacks, respectively. This functionality has been implemented in the [MimiPenguin](https://attack.mitre.org/software/S0179), an open source tool inspired by [Mimikatz](https://attack.mitre.org/software/S0002). The tool dumps process memory, then harvests passwords and hashes by looking for text strings and regex patterns for how given applications such as Gnome Keyring, sshd, and Apache use memory to store such authentication artifacts.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credential Dumping - T1003\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1003"}]}, {"type": "attack-pattern", "id": "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "LSASS Memory - T1003.001", "description": "ATT&CK Tactic | Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\nBuilt-in Windows tools such as comsvcs.dll can also be used:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)\n\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSSAS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\n", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"LSASS Memory - T1003.001\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1003.001"}]}, {"type": "attack-pattern", "id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d", "created": "2025-03-06T07:23:32.000Z", "modified": "2025-03-06T07:23:32.000Z", "name": "Exfiltration Over C2 Channel - T1041", "description": "ATT&CK Tactic | Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Exfiltration Over C2 Channel - T1041\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1041"}]}, {"type": "marking-definition", "id": "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9", "created": "2017-01-20T00:00:00.000Z", "definition_type": "tlp", "definition": {"tlp": "white"}}]}
