{"type": "bundle", "spec_version": "2.0", "id": "bundle--71cad116-fe39-4abd-8a4b-d76a573f060b", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--5970d06a-cadc-4fe6-86c7-d1ad8a5bfb9d", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Ransomware incidents in Japan during the first half of 2025", "published": "2025-08-19T07:45:52Z", "object_refs": ["x-misp-attribute--9c410f3e-3590-432e-afd0-6d8510f43fda", "x-misp-attribute--5527b626-aa69-4202-ae53-e489d22da4e4", "observed-data--7a73c3ce-2f92-4e21-be2f-78003af8a3d6", "indicator--20cb3aaa-d0dc-4921-9147-3e064562e4c5", "indicator--15616838-ca9c-4f72-9b49-8d8af60a2966", "indicator--731b8d40-86d8-4fb0-a2ae-f6a8bbe351c1", "indicator--4bfa8509-765c-40d5-89db-e7b418f038a0", "attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef", "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055", "attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92", "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a", "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4", "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529", "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579", "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580", "attack-pattern--e4dc8c01-417f-458d-9ee0-bb0617c1b391"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\"", " Ransomware", "tlp:clear"]}, {"type": "x-misp-attribute", "id": "x-misp-attribute--9c410f3e-3590-432e-afd0-6d8510f43fda", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-01T02:09:05.000Z", "modified": "2025-08-01T02:09:05.000Z", "labels": ["misp:type=\"threat-actor\"", "misp:category=\"Attribution\""], "x_misp_category": "Attribution", "x_misp_comment": "Kawa4096 ransomware attribute", "x_misp_type": "threat-actor", "x_misp_value": "Kawa4096 ransomware actor"}, {"type": "x-misp-attribute", "id": "x-misp-attribute--5527b626-aa69-4202-ae53-e489d22da4e4", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-01T02:10:05.000Z", "modified": "2025-08-01T02:10:05.000Z", "labels": ["misp:type=\"text\"", "misp:category=\"Payload type\""], "x_misp_category": "Payload type", "x_misp_comment": "KawaLocker attribute", "x_misp_type": "text", "x_misp_value": "KawaLocker"}, {"type": "observed-data", "id": "observed-data--7a73c3ce-2f92-4e21-be2f-78003af8a3d6", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-01T02:14:17.000Z", "modified": "2025-08-01T02:14:17.000Z", "first_observed": "2025-08-01T02:14:17Z", "last_observed": "2025-08-01T02:14:17Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/ransomware_incidents_in_Japan_during_the_first_half_of_2025"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "indicator", "id": "indicator--20cb3aaa-d0dc-4921-9147-3e064562e4c5", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-01T02:17:31.000Z", "modified": "2025-08-01T02:17:31.000Z", "description": "KawaLocker", "pattern": "[file:hashes.SHA256 = 'f3a6d4ccdd0f663269c3909e74d6847608b8632fb2814b0436a4532b8281e617']", "valid_from": "2025-08-01T02:17:31Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--15616838-ca9c-4f72-9b49-8d8af60a2966", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-01T02:17:31.000Z", "modified": "2025-08-01T02:17:31.000Z", "description": "KawaLocker", "pattern": "[file:hashes.SHA256 = 'fadfef5caf6aede2a3a02a856b965ed40ee189612fa6fde81a30d5ed5ee6ae7d']", "valid_from": "2025-08-01T02:17:31Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--731b8d40-86d8-4fb0-a2ae-f6a8bbe351c1", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-12T04:34:43.000Z", "modified": "2025-08-12T04:34:43.000Z", "description": "KawaLocker", "pattern": "[file:hashes.SHA256 = '33a0121068748f6e6149bc6104228a81aecdfed387d7eb7547d95481e60150b7']", "valid_from": "2025-08-12T04:34:43Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--4bfa8509-765c-40d5-89db-e7b418f038a0", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2025-08-12T04:35:32.000Z", "modified": "2025-08-12T04:35:32.000Z", "description": "KawaLocker", "pattern": "[file:hashes.SHA256 = 'b60ef95da28cba0d44cad8d03121b0bec3bc3865044d010cffb8450629d91c9f']", "valid_from": "2025-08-12T04:35:32Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "attack-pattern", "id": "attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Communication Through Removable Media - T1092", "description": "ATT&CK Tactic | Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Communication Through Removable Media - T1092\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1092"}]}, {"type": "attack-pattern", "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Windows Management Instrumentation - T1047", "description": "ATT&CK Tactic | Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM).(Citation: MSDN WMI) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: MSDN WMI)(Citation: FireEye WMI 2015)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Windows Management Instrumentation - T1047\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1047"}]}, {"type": "attack-pattern", "id": "attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Indicator Removal from Tools - T1027.005", "description": "ATT&CK Tactic | Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Indicator Removal from Tools - T1027.005\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1027.005"}]}, {"type": "attack-pattern", "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Clear Command History - T1070.003", "description": "ATT&CK Tactic | In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data.(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Clear Command History - T1070.003\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1070.003"}]}, {"type": "attack-pattern", "id": "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "System Binary Proxy Execution - T1218", "description": "ATT&CK Tactic | Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.\n\nSimilarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"System Binary Proxy Execution - T1218\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1218"}]}, {"type": "attack-pattern", "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Impair Defenses - T1562", "description": "ATT&CK Tactic | Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Impair Defenses - T1562\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1562"}]}, {"type": "attack-pattern", "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Disable or Modify Tools - T1562.001", "description": "ATT&CK Tactic | Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take the many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information.\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Disable or Modify Tools - T1562.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-578"}]}, {"type": "attack-pattern", "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Process Injection - T1055", "description": "ATT&CK Tactic | Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Process Injection - T1055\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-640"}]}, {"type": "attack-pattern", "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Command and Scripting Interpreter - T1059", "description": "ATT&CK Tactic | Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Command and Scripting Interpreter - T1059\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059"}]}, {"type": "attack-pattern", "id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Process Discovery - T1057", "description": "ATT&CK Tactic | Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via /proc.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Process Discovery - T1057\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-573"}]}, {"type": "attack-pattern", "id": "attack-pattern--e4dc8c01-417f-458d-9ee0-bb0617c1b391", "created": "2025-08-19T07:45:52.000Z", "modified": "2025-08-19T07:45:52.000Z", "name": "Debugger Evasion - T1622", "description": "ATT&CK Tactic | Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)\n\nDebugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.\n\nSpecific checks will vary based on the target and/or adversary, but may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>IsDebuggerPresent()</code> and <code> NtQueryInformationProcess()</code>, or manually checking the <code>BeingDebugged</code> flag of the Process Environment Block (PEB). Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would \u201cswallow\u201d or handle the potential error).(Citation: hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug)\n\nAdversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>OutputDebugStringW()</code>.(Citation: wardle evilquest partii)(Citation: Checkpoint Dridex Jan 2021)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Debugger Evasion - T1622\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1622"}]}]}
