{"type": "bundle", "spec_version": "2.0", "id": "bundle--e6604834-7408-406c-a5d8-db9b06965b49", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--36e65b95-9499-4935-ae96-361e54c43446", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "New PXA Stealer targets government and education sectors for sensitive information", "published": "2024-11-14T11:04:45Z", "object_refs": ["observed-data--0cb1a171-0bcf-4506-8a98-9f3736804313", "indicator--43a6a738-779c-41c4-b33e-7ea49d109df1", "indicator--5b947906-6958-48c9-b22e-b4bd0feaa0fc", "indicator--722f59fe-e4c4-4ff8-aa8a-94ef790e72ba", "indicator--d7772dc3-b417-4c51-9ec3-e1e6e791cc38", "indicator--cb99b0de-2527-4e7a-bf47-3af7c9ba1fb5", "indicator--95ec6e32-e005-449e-b2f5-1c61eb1f8393", "indicator--09cbee32-d487-405c-a05f-eeedbb19fc34", "indicator--298cbf8d-662d-490b-86e3-b7d2d9defb63", "indicator--408bd8a3-819a-4fb0-a8c5-9cb50797576e", "indicator--1d94b469-31af-4a96-b61f-c33f6f709a80", "indicator--80527443-4534-4ed4-9929-aadbed6c17c7", "indicator--be8a5a69-a8b4-43a8-8d14-862fc1191528", "indicator--84e27ee1-c64a-47b1-8bd8-400959286ded", "indicator--f4fa9ea2-0c7f-4edc-b93b-465003c02e6a", "indicator--bad2f16e-8abc-4729-8c75-93769afde177", "indicator--22dcfe49-1ba9-4a6f-87d4-a4c91597b3ae", "indicator--07b2075a-7379-4a57-80a4-3e3f33a4fcce", "indicator--8c6e34ed-eca6-4e08-b47c-ac66e7568dd2", "indicator--a116fbfa-49c8-494c-b4e0-de3e4dbc09a7", "indicator--eef9d5f9-04ed-415c-a813-5bc0edfa46bb", "indicator--20d52c45-25ea-4a79-ad13-a9bca2010fc4", "indicator--a16a1723-a985-4885-a58d-dfc606f7251e", "indicator--b57916e5-8694-45aa-8ed9-cf15f7f9e33a", "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055", "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736", "attack-pattern--7fd87010-3a00-4da3-b905-410525e8ec44", "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670", "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf", "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279", "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6", "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b", "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "attack-pattern--67720091-eee3-4d2d-ae16-8264567f6f5b", "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0", "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4", "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e", "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d", "attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0", "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8", "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc", "attack-pattern--e1c912a9-e305-434b-9172-8a6ce3ec9c4a", "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a", "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b", "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118", "attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\"", "Python", "Rust", "stealer", "Talos_Intel_Blog"], "object_marking_refs": ["marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"]}, {"type": "observed-data", "id": "observed-data--0cb1a171-0bcf-4506-8a98-9f3736804313", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:01:26.000Z", "modified": "2024-11-14T06:01:26.000Z", "first_observed": "2024-11-14T06:01:26Z", "last_observed": "2024-11-14T06:01:26Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/new-pxa-stealer/"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "indicator", "id": "indicator--43a6a738-779c-41c4-b33e-7ea49d109df1", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "Malicious ZIP", "pattern": "[file:hashes.SHA256 = 'fdad95329954e0085d992cba78188a26abd718797f4a83347ec402f70fe65269']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--5b947906-6958-48c9-b22e-b4bd0feaa0fc", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "Malicious ZIP", "pattern": "[file:hashes.SHA256 = '7db49da15fd159146fe869d049e030a4ecd0d605a762bea4cc4eb702a6ce9ee6']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--722f59fe-e4c4-4ff8-aa8a-94ef790e72ba", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "Malicious ZIP", "pattern": "[file:hashes.SHA256 = '707004559c8d625f2d4b296ede702def1f9f52cadf4c52dadc41f3077531d04f']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--d7772dc3-b417-4c51-9ec3-e1e6e791cc38", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "Rust Loader", "pattern": "[file:hashes.SHA256 = 'bc15114841e39203b4e0f5d2cdeef11cc4eceba99eb0c3074a1c6d7b3968404a']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--cb99b0de-2527-4e7a-bf47-3af7c9ba1fb5", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "Rust Loader", "pattern": "[file:hashes.SHA256 = 'a9e3f6b9047b5320434bc7b64f4ba6c799d2b6919d41ed32e9815742f3c10194']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--95ec6e32-e005-449e-b2f5-1c61eb1f8393", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "Batch Scripts", "pattern": "[file:hashes.SHA256 = '782da8904a729971fab86286dd1f44e8de686b7bc66b855079381e1c9e97f6da']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--09cbee32-d487-405c-a05f-eeedbb19fc34", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "Batch Scripts", "pattern": "[file:hashes.SHA256 = 'e689601d502cc0cd8017f9d6953ce7e201b2dad42f679dc33afa673249ea1aa4']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--298cbf8d-662d-490b-86e3-b7d2d9defb63", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting site", "pattern": "[domain-name:value = 'tvdseo.com']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"domain\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--408bd8a3-819a-4fb0-a8c5-9cb50797576e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/synaptics.zip']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--1d94b469-31af-4a96-b61f-c33f6f709a80", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/PXA/PXA_PURE_ENC']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--80527443-4534-4ed4-9929-aadbed6c17c7", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/PXA/PXA_BOT']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--be8a5a69-a8b4-43a8-8d14-862fc1191528", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/Adonis/AdFnis_Bot']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--84e27ee1-c64a-47b1-8bd8-400959286ded", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/Adonis/Adonis_Bot']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--f4fa9ea2-0c7f-4edc-b93b-465003c02e6a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/Adonis/Adonis_XW_ENC']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--bad2f16e-8abc-4729-8c75-93769afde177", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/Adonis/Adonis_Bot0']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--22dcfe49-1ba9-4a6f-87d4-a4c91597b3ae", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/STC/Cookie_Ext.zip']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--07b2075a-7379-4a57-80a4-3e3f33a4fcce", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/STC/STC_XW_ENC']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--8c6e34ed-eca6-4e08-b47c-ac66e7568dd2", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/STC/STC_PURE.b64']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--a116fbfa-49c8-494c-b4e0-de3e4dbc09a7", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/STC/STC_PUP']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--eef9d5f9-04ed-415c-a813-5bc0edfa46bb", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/STC/STC_OTO']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--20d52c45-25ea-4a79-ad13-a9bca2010fc4", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/PXA/Cookie_Ext.zip']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--a16a1723-a985-4885-a58d-dfc606f7251e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/STC/STC_PURE_ENC']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--b57916e5-8694-45aa-8ed9-cf15f7f9e33a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2024-11-14T06:10:18.000Z", "modified": "2024-11-14T06:10:18.000Z", "description": "hosting URL", "pattern": "[url:value = 'https://tvdseo.com/file/STC/STC_BOT']", "valid_from": "2024-11-14T06:10:18Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "attack-pattern", "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Windows Management Instrumentation - T1047", "description": "ATT&CK Tactic | Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM).(Citation: MSDN WMI) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: MSDN WMI)(Citation: FireEye WMI 2015)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Windows Management Instrumentation - T1047\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1047"}]}, {"type": "attack-pattern", "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Command and Scripting Interpreter - T1059", "description": "ATT&CK Tactic | Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Command and Scripting Interpreter - T1059\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059"}]}, {"type": "attack-pattern", "id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "PowerShell - T1059.001", "description": "ATT&CK Tactic | Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"PowerShell - T1059.001\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059.001"}]}, {"type": "attack-pattern", "id": "attack-pattern--7fd87010-3a00-4da3-b905-410525e8ec44", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Scripting - T1064", "description": "ATT&CK Tactic | **This technique has been deprecated. Please use [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) where appropriate.**\n\nAdversaries may use scripts to aid in operations and perform multiple actions that would otherwise be manual. Scripting is useful for speeding up operational tasks and reducing the time required to gain access to critical resources. Some scripting languages may be used to bypass process monitoring mechanisms by directly interacting with the operating system at an API level instead of calling other programs. Common scripting languages for Windows include VBScript and [PowerShell](https://attack.mitre.org/techniques/T1086) but could also be in the form of command-line batch scripts.\n\nScripts can be embedded inside Office documents as macros that can be set to execute when files used in [Spearphishing Attachment](https://attack.mitre.org/techniques/T1193) and other types of spearphishing are opened. Malicious embedded macros are an alternative means of execution than software exploitation through [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), where adversaries will rely on macros being allowed or that the user will accept to activate them.\n\nMany popular offensive frameworks exist which use forms of scripting for security testers and adversaries alike. Metasploit (Citation: Metasploit_Ref), Veil (Citation: Veil_Ref), and PowerSploit (Citation: Powersploit) are three examples that are popular among penetration testers for exploit and post-compromise operations and include many features for evading defenses. Some adversaries are known to use PowerShell. (Citation: Alperovitch 2014)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Scripting - T1064\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1064"}]}, {"type": "attack-pattern", "id": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Native API - T1106", "description": "ATT&CK Tactic | Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system. While invoking API functions, adversaries may also attempt to bypass defensive tools (ex: unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Native API - T1106\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1106"}]}, {"type": "attack-pattern", "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Boot or Logon Autostart Execution - T1547", "description": "ATT&CK Tactic | Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Boot or Logon Autostart Execution - T1547\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-564"}]}, {"type": "attack-pattern", "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Registry Run Keys / Startup Folder - T1547.001", "description": "ATT&CK Tactic | Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Registry Run Keys / Startup Folder - T1547.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-270"}]}, {"type": "attack-pattern", "id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Hijack Execution Flow - T1574", "description": "ATT&CK Tactic | Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Hijack Execution Flow - T1574\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1574"}]}, {"type": "attack-pattern", "id": "attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "DLL Side-Loading - T1574.002", "description": "ATT&CK Tactic | Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\n\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"DLL Side-Loading - T1574.002\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-641"}]}, {"type": "attack-pattern", "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Process Injection - T1055", "description": "ATT&CK Tactic | Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Process Injection - T1055\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-640"}]}, {"type": "attack-pattern", "id": "attack-pattern--67720091-eee3-4d2d-ae16-8264567f6f5b", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Abuse Elevation Control Mechanism - T1548", "description": "ATT&CK Tactic | Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk. An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Abuse Elevation Control Mechanism - T1548\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1548"}]}, {"type": "attack-pattern", "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Masquerading - T1036", "description": "ATT&CK Tactic | Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Masquerading - T1036\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-177"}]}, {"type": "attack-pattern", "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Modify Registry - T1112", "description": "ATT&CK Tactic | Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Modify Registry - T1112\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-203"}]}, {"type": "attack-pattern", "id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Indirect Command Execution - T1202", "description": "ATT&CK Tactic | Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Indirect Command Execution - T1202\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1202"}]}, {"type": "attack-pattern", "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Virtualization/Sandbox Evasion - T1497", "description": "ATT&CK Tactic | Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\n\n", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Virtualization/Sandbox Evasion - T1497\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1497"}]}, {"type": "attack-pattern", "id": "attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Credentials from Password Stores - T1555", "description": "ATT&CK Tactic | Adversaries may search for common password storage locations to obtain user credentials. Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications that store passwords to make it easier for users manage and maintain. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credentials from Password Stores - T1555\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1555"}]}, {"type": "attack-pattern", "id": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Credentials from Web Browsers - T1555.003", "description": "ATT&CK Tactic | Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credentials from Web Browsers - T1555.003\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1555.003"}]}, {"type": "attack-pattern", "id": "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Credentials In Files - T1552.001", "description": "ATT&CK Tactic | Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credentials In Files - T1552.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-639"}]}, {"type": "attack-pattern", "id": "attack-pattern--e1c912a9-e305-434b-9172-8a6ce3ec9c4a", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Data from Local System - T1533", "description": "ATT&CK Tactic | Sensitive data can be collected from local system sources, such as the file system or databases of information residing on the system.\n\nLocal system data includes information stored by the operating system. Access to local system data often requires escalated privileges (e.g. root access). Examples of local system data include authentication tokens, the device keyboard cache, Wi-Fi passwords, and photos.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Data from Local System - T1533\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1533"}]}, {"type": "attack-pattern", "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Archive Collected Data - T1560", "description": "ATT&CK Tactic | An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Archive Collected Data - T1560\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1560"}]}, {"type": "attack-pattern", "id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Application Layer Protocol - T1071", "description": "ATT&CK Tactic | Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, or DNS. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Application Layer Protocol - T1071\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1071"}]}, {"type": "attack-pattern", "id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Non-Application Layer Protocol - T1095", "description": "ATT&CK Tactic | Adversaries may use a non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.(Citation: Microsoft ICMP) However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Non-Application Layer Protocol - T1095\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1095"}]}, {"type": "attack-pattern", "id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Encrypted Channel - T1573", "description": "ATT&CK Tactic | Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Encrypted Channel - T1573\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1573"}]}, {"type": "attack-pattern", "id": "attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c", "created": "2024-11-14T06:18:35.000Z", "modified": "2024-11-14T06:18:35.000Z", "name": "Data Destruction - T1485", "description": "ATT&CK Tactic | Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).\n\nIn cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Data Destruction - T1485\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1485"}]}, {"type": "marking-definition", "id": "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9", "created": "2017-01-20T00:00:00.000Z", "definition_type": "tlp", "definition": {"tlp": "white"}}]}
