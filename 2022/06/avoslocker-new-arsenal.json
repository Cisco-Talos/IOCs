{"type": "bundle", "spec_version": "2.0", "id": "bundle--4d4ba6c2-d85a-43d8-af6f-0244a031b8a8", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--e5991726-49e4-4684-a842-d5d6c5fdf4aa", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Avos ransomware group expands with new attack arsenal", "published": "2022-06-24T17:54:39Z", "object_refs": ["x-misp-attribute--83c86959-e48e-408c-8979-2085f7cf775c", "x-misp-attribute--d8d59e20-7e07-453c-9626-248faee9776e", "observed-data--10314e1c-8867-472b-b5a2-8362108feb4f", "x-misp-attribute--244bf1a1-25fe-43a7-8499-b4b57464cb48", "indicator--866d1dee-20c8-4ce2-bf55-782b12714736", "indicator--1622ca8b-6463-4b25-8067-956555a4e480", "indicator--595e28d5-e30e-4aad-a7c9-35e0d79a9c4c", "indicator--4f13b326-ce8d-4188-ad14-f60f8192ec34", "indicator--2877b34c-fcf6-4cbe-a59a-43c6d89de697", "indicator--2479e8b2-e9a6-4104-ae9d-5a68d0fce870", "indicator--ed5026c1-d360-44a1-997f-e496d4c0b957", "indicator--377788f2-c584-41db-b7a0-4dd45eb7db0b", "indicator--4ee1fe06-8463-48e3-ad9d-aad073c70e61", "indicator--144ea1d0-dab9-4468-8c87-0e71543d728c", "indicator--27de2436-73d2-45fa-b376-024112c47437", "indicator--8d79850a-6840-4958-b167-13d070e08e1f", "indicator--6a4dd297-847c-47bc-bec7-efc72315fc66", "indicator--2c1bf0b8-8aad-4e8b-947d-4908fe8cb123", "indicator--81fbfea2-83b2-4f62-9f46-2b8e6d6f60cc", "indicator--f21a25ff-f175-4f10-8ee9-597c70f5c1b8", "indicator--a0b545bb-1793-40d8-92ce-f27f928ce753", "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a", "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055", "attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef", "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579", "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "attack-pattern--1b51f5bc-b97a-498a-8dbd-bc6b1901bf19", "attack-pattern--11f29a39-0942-4d62-92b6-fe236cf3066e", "attack-pattern--648f8051-1a35-46d3-b1d8-3a3f5cf2cc8e", "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298", "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c", "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\""], "object_marking_refs": ["marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"]}, {"type": "x-misp-attribute", "id": "x-misp-attribute--83c86959-e48e-408c-8979-2085f7cf775c", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:15:22.000Z", "modified": "2022-06-24T17:15:22.000Z", "labels": ["misp:type=\"threat-actor\"", "misp:category=\"Attribution\""], "x_misp_category": "Attribution", "x_misp_comment": "Threat actor for Avos Locker", "x_misp_type": "threat-actor", "x_misp_value": "Avos Locker affiliate"}, {"type": "x-misp-attribute", "id": "x-misp-attribute--d8d59e20-7e07-453c-9626-248faee9776e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:16:21.000Z", "modified": "2022-06-24T17:16:21.000Z", "labels": ["misp:type=\"text\"", "misp:category=\"Payload type\""], "x_misp_category": "Payload type", "x_misp_comment": "Avos Locker payload", "x_misp_type": "text", "x_misp_value": "Avos Locker ransomware"}, {"type": "observed-data", "id": "observed-data--10314e1c-8867-472b-b5a2-8362108feb4f", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:17:20.000Z", "modified": "2022-06-24T17:17:20.000Z", "first_observed": "2022-06-24T17:17:20Z", "last_observed": "2022-06-24T17:17:20Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/2022/06/avoslocker-new-arsenal.html"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "x-misp-attribute", "id": "x-misp-attribute--244bf1a1-25fe-43a7-8499-b4b57464cb48", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:19:32.000Z", "modified": "2022-06-24T17:19:32.000Z", "labels": ["misp:type=\"text\"", "misp:category=\"Payload type\""], "x_misp_category": "Payload type", "x_misp_comment": "Log4j exploit", "x_misp_type": "text", "x_misp_value": "Log4j exploit in VMWare Horizon Unified Access Gateways (UAG)"}, {"type": "indicator", "id": "indicator--866d1dee-20c8-4ce2-bf55-782b12714736", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = 'ffd933ad53f22a0f10cceb4986087258f72dffdd36999b7014c6b37c157ee45f']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--1622ca8b-6463-4b25-8067-956555a4e480", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = 'cee38fd125aa3707dc77351dde129dba5e5aa978b9429ef3e09a95ebf127b46b']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--595e28d5-e30e-4aad-a7c9-35e0d79a9c4c", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '7f0deab21a3773295319e7a0afca1bea792943de0041e22523eb0d61a1c155e2']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--4f13b326-ce8d-4188-ad14-f60f8192ec34", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = 'cac73029ad6a543b423822923967f4c240d02516fab34185c59067896ac6eb99']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--2877b34c-fcf6-4cbe-a59a-43c6d89de697", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '29a3ae1d32e249d01b39520cd1db27aa980e646d83694ff078424bed60df9304']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--2479e8b2-e9a6-4104-ae9d-5a68d0fce870", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '63bdd396ff6397b3a17913badb7905c88e217d0a8cf864ab5e71cc174a4f97a1']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--ed5026c1-d360-44a1-997f-e496d4c0b957", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '63ebb998ebbbfe3863214a85c388fc23b58af4492b2e96eb53c436360344d79d']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--377788f2-c584-41db-b7a0-4dd45eb7db0b", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '912018ab3c6b16b39ee84f17745ff0c80a33cee241013ec35d0281e40c0658d9']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--4ee1fe06-8463-48e3-ad9d-aad073c70e61", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = 'f2faa8a91840de16efb8194182bcfa9919b74a2c2de40d6ed4791a3308897a01']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--144ea1d0-dab9-4468-8c87-0e71543d728c", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '48514e6bb92dd9e24a16a4ab1c7c3bd89dad76bef53cec2a671821024fadcb2b']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--27de2436-73d2-45fa-b376-024112c47437", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '61239d726c92c82f553200ecbec3ac18d251902fb9ca4d4f52263c82374a5b75']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--8d79850a-6840-4958-b167-13d070e08e1f", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = 'e4af7f048e93b159e20cc3efbacdb68e3c1fb213324daf325268ccb71f6c3189']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--6a4dd297-847c-47bc-bec7-efc72315fc66", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = 'e68f9c3314beee640cc32f08a8532aa8dcda613543c54a83680c21d7cd49ca0f']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--2c1bf0b8-8aad-4e8b-947d-4908fe8cb123", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[file:hashes.SHA256 = '978dffa295ac822064ff6f7a6b6bc498e854f833d36633214d35ccce70db4819']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--81fbfea2-83b2-4f62-9f46-2b8e6d6f60cc", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[url:value = 'http://45.136.230.191:4000/D234R23']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--f21a25ff-f175-4f10-8ee9-597c70f5c1b8", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '176.113.115.107']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--a0b545bb-1793-40d8-92ce-f27f928ce753", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2022-06-24T17:25:48.000Z", "modified": "2022-06-24T17:25:48.000Z", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '45.136.230.191']", "valid_from": "2022-06-24T17:25:48Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "attack-pattern", "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Obfuscated Files or Information - T1027", "description": "ATT&CK Tactic | Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Obfuscated Files or Information - T1027\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-267"}]}, {"type": "attack-pattern", "id": "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Inhibit System Recovery - T1490", "description": "ATT&CK Tactic | Adversaries may delete or remove built-in operating system data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Operating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017)\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Inhibit System Recovery - T1490\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1490"}]}, {"type": "attack-pattern", "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Windows Management Instrumentation - T1047", "description": "ATT&CK Tactic | Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is an administration feature that provides a uniform environment to access Windows system components. The WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) (WinRM). (Citation: MSDN WMI) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS. (Citation: MSDN WMI) (Citation: FireEye WMI 2015)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for Discovery as well as remote Execution of files as part of Lateral Movement. (Citation: FireEye WMI SANS 2015) (Citation: FireEye WMI 2015)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Windows Management Instrumentation - T1047\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1047"}]}, {"type": "attack-pattern", "id": "attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Communication Through Removable Media - T1092", "description": "ATT&CK Tactic | Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system. Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Communication Through Removable Media - T1092\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1092"}]}, {"type": "attack-pattern", "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Disable or Modify Tools - T1562.001", "description": "ATT&CK Tactic | Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take the many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information.\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Disable or Modify Tools - T1562.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-578"}]}, {"type": "attack-pattern", "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Command and Scripting Interpreter - T1059", "description": "ATT&CK Tactic | Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Command and Scripting Interpreter - T1059\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059"}]}, {"type": "attack-pattern", "id": "attack-pattern--1b51f5bc-b97a-498a-8dbd-bc6b1901bf19", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Process Discovery - T1424", "description": "ATT&CK Tactic | On Android versions prior to 5, applications can observe information about other processes that are running through methods in the ActivityManager class. On Android versions prior to 7, applications can obtain this information by executing the <code>ps</code> command, or by examining the <code>/proc</code> directory. Starting in Android version 7, use of the Linux kernel's <code>hidepid</code> feature prevents applications (without escalated privileges) from accessing this information (Citation: Android-SELinuxChanges).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Process Discovery - T1424\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1424"}]}, {"type": "attack-pattern", "id": "attack-pattern--11f29a39-0942-4d62-92b6-fe236cf3066e", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Double File Extension - T1036.007", "description": "ATT&CK Tactic | Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user\u2019s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Double File Extension - T1036.007\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1036.007"}]}, {"type": "attack-pattern", "id": "attack-pattern--648f8051-1a35-46d3-b1d8-3a3f5cf2cc8e", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Foreground Persistence - T1541", "description": "ATT&CK Tactic | Adversaries may abuse Android's `startForeground()` API method to maintain continuous sensor access. Beginning in Android 9, idle applications running in the background no longer have access to device sensors, such as the camera, microphone, and gyroscope.(Citation: Android-SensorsOverview) Applications can retain sensor access by running in the foreground, using Android\u2019s `startForeground()` API method. This informs the system that the user is actively interacting with the application, and it should not be killed. The only requirement to start a foreground service is showing a persistent notification to the user.(Citation: Android-ForegroundServices)\n\nMalicious applications may abuse the `startForeground()` API method to continue running in the foreground, while presenting a notification to the user pretending to be a genuine application. This would allow unhindered access to the device\u2019s sensors, assuming permission has been previously granted.(Citation: BlackHat Sutter Android Foreground 2019)\n\nMalicious applications may also abuse the `startForeground()` API to inform the Android system that the user is actively interacting with the application, thus preventing it from being killed by the low memory killer.(Citation: TrendMicro-Yellow Camera)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Foreground Persistence - T1541\""], "external_references": [{"source_name": "NIST Mobile Threat Catalogue", "external_id": "APP-19"}]}, {"type": "attack-pattern", "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Extra Window Memory Injection - T1055.011", "description": "ATT&CK Tactic | Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Extra Window Memory Injection - T1055.011\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1055.011"}]}, {"type": "attack-pattern", "id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "File Deletion - T1070.004", "description": "ATT&CK Tactic | Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"File Deletion - T1070.004\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1070.004"}]}, {"type": "attack-pattern", "id": "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc", "created": "2022-06-24T17:54:39.000Z", "modified": "2022-06-24T17:54:39.000Z", "name": "Credentials In Files - T1552.001", "description": "ATT&CK Tactic | Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:name=\"Attack Pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credentials In Files - T1552.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-639"}]}, {"type": "marking-definition", "id": "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9", "created": "2017-01-20T00:00:00.000Z", "definition_type": "tlp", "definition": {"tlp": "white"}}]}
