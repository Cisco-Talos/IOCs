{"type": "bundle", "spec_version": "2.0", "id": "bundle--265791f1-cc23-4835-9dcd-a86e2d0a084a", "objects": [{"type": "identity", "id": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Talos", "identity_class": "organization"}, {"type": "report", "id": "report--74481ad7-f800-4b14-af86-69308c9915e6", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Cybercriminals target graphic designers with GPU miners", "published": "2023-09-07T12:31:59Z", "object_refs": ["indicator--f148fd85-08c8-42f9-ba3e-7e2ed0110475", "indicator--7441b79d-b384-4e79-bdb7-c6462e1167a6", "indicator--307f753e-bb67-45b7-8a63-62c6c5c0da70", "indicator--bdb3c790-8a18-4dbf-905e-9994583c1108", "indicator--1c6fc869-f01d-4345-8569-11e0f76632a4", "indicator--51459b8e-4b0c-4dd1-b864-ea3bb40dd8a9", "indicator--e50c15d7-c805-4904-8a3e-4403501432c5", "indicator--d08067d6-237f-40f1-b5fa-1c7e76db7aed", "indicator--be6c8419-572c-4eb0-b051-0e31b40aec8e", "indicator--b428baa2-1a8e-4258-a86f-f926ae426d1a", "indicator--ebda493e-434f-42f4-ade2-c9ba91760960", "indicator--615c4fdc-1063-4514-8f7c-cf40e1d4425e", "indicator--6718abf1-c84a-4a2b-b41c-9ef7d9bb44a5", "indicator--9ca7e541-e8d1-401a-9af1-2fc53f3acd98", "indicator--494cc382-d0f7-42ef-8dcb-b237003a6312", "indicator--dfd948a8-7849-4d2a-9c7c-4e84a5d1aa27", "indicator--b571a038-36db-4861-87f6-06128577f213", "indicator--f07b4268-9f2e-4d8d-9625-f38337aa188d", "indicator--dac9af85-b783-41c4-b5b9-aedaf7f26552", "indicator--d7f196b8-945e-47bd-81fb-cc15abebb86c", "indicator--06be3d6d-1ac8-4bf0-9ddf-3a2e94bb79b0", "indicator--cddeb8df-9a62-44c3-b0d7-d0da3743fde7", "indicator--3f6df638-9d32-4964-b242-8a813e31fb14", "indicator--4495d302-6a0a-4099-b433-cc3d9cb41add", "indicator--cb2d37ed-16f9-48bf-8e47-f04b885b0f25", "indicator--bb66677b-ccd2-4afa-bae4-32652026fff0", "observed-data--875b240a-da45-4a08-9f9c-0c3db10c4f7a", "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4", "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d", "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", "attack-pattern--1b51f5bc-b97a-498a-8dbd-bc6b1901bf19", "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62", "attack-pattern--e4dc8c01-417f-458d-9ee0-bb0617c1b391", "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670", "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579", "attack-pattern--f5946b5e-9408-485f-a7f7-b5efc88909b6", "attack-pattern--d4536441-1bcc-49fa-80ae-a596ed3f7ffd", "attack-pattern--e2ea7f6b-8d4f-49c3-819d-660530d12b77", "attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7", "attack-pattern--c877e33f-1df6-40d6-b1e7-ce70f16f4979", "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062", "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a"], "labels": ["Threat-Report", "misp:tool=\"MISP-STIX-Converter\"", "BackDoor/RAT", "cryptominer", "Talos_Intel_Blog"], "object_marking_refs": ["marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9"]}, {"type": "indicator", "id": "indicator--f148fd85-08c8-42f9-ba3e-7e2ed0110475", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:46.000Z", "modified": "2023-09-06T10:55:46.000Z", "description": "Malicious Installers", "pattern": "[file:hashes.SHA256 = '3ceb959554450c4ed97bc7c7fbe1d84815a8a3d5be07da9e8d9bb2e705caf9eb']", "valid_from": "2023-09-06T10:55:46Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--7441b79d-b384-4e79-bdb7-c6462e1167a6", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:46.000Z", "modified": "2023-09-06T10:55:46.000Z", "description": "Malicious Installers", "pattern": "[file:hashes.SHA256 = '9113b447722ccfcc7b6d6811c3a4f9434c6537697d0bc1cb16966bf8bfbb47c1']", "valid_from": "2023-09-06T10:55:46Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--307f753e-bb67-45b7-8a63-62c6c5c0da70", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:46.000Z", "modified": "2023-09-06T10:55:46.000Z", "description": "Malicious Installers", "pattern": "[file:hashes.SHA256 = 'b133e715a391d653d2c736c95ac8a58cfd37362a77bec4bcce363e61398ffd2b']", "valid_from": "2023-09-06T10:55:46Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--bdb3c790-8a18-4dbf-905e-9994583c1108", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "Malicious Installers", "pattern": "[file:hashes.SHA256 = 'b8d323a348aac4e101a3dd0639b2b03d17c2d14f2eba15a70ea0b3e5fb4811a9']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--1c6fc869-f01d-4345-8569-11e0f76632a4", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "Malicious Installers", "pattern": "[file:hashes.SHA256 = 'c785a3da9a7acca0bc8bcc1de92dfd6647d0bc2f897a1a747b595f89650378e8']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--51459b8e-4b0c-4dd1-b864-ea3bb40dd8a9", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "Batch scripts", "pattern": "[file:hashes.SHA256 = 'dfa96bee7ba6bf98a9594b568bc8c02012081c8822a5f52d62dd7fac0b0c6974']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--e50c15d7-c805-4904-8a3e-4403501432c5", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "Batch scripts", "pattern": "[file:hashes.SHA256 = '024b6e2e1d8cabb07215686e005e302c5e16e442902225daffe8f1e3382d02d1']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--d08067d6-237f-40f1-b5fa-1c7e76db7aed", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "Batch scripts", "pattern": "[file:hashes.SHA256 = '29740ff47e77833032744bbbef669755d864da0e1c2a834b903adcb914d6e8a6']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--be6c8419-572c-4eb0-b051-0e31b40aec8e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "PowerShell Loaders", "pattern": "[file:hashes.SHA256 = '92463ea41e384f462226e473c40f6011d9f9463a05b441782596a2e6d760fe42']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--b428baa2-1a8e-4258-a86f-f926ae426d1a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "PowerShell Loaders", "pattern": "[file:hashes.SHA256 = '2db2fe6e7b7482f14d5d44446353a277f80afb4905493443a93cc48c1ef120ef']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--ebda493e-434f-42f4-ade2-c9ba91760960", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "PowerShell Loaders", "pattern": "[file:hashes.SHA256 = 'c0fb29c35a026be5839f10f5a1d889b70107cc836fa894091bf721135f3c6e13']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--615c4fdc-1063-4514-8f7c-cf40e1d4425e", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "PowerShell Loaders", "pattern": "[file:hashes.SHA256 = 'b297496f7723c21162e2598f6d914f148c55409197f26a1fe6936f86d566d50d']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--6718abf1-c84a-4a2b-b41c-9ef7d9bb44a5", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "File less PowerShell Downloader", "pattern": "[file:hashes.SHA256 = 'e1a272780aa760870a793bde01697ed5f425bbe7f862e85dc06091317f573394']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--9ca7e541-e8d1-401a-9af1-2fc53f3acd98", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "File less PowerShell Launcher", "pattern": "[file:hashes.SHA256 = '1075c837d0d6b3195c8a2aa2d70419c22ff98e96ebb17ec6e1d1251a5c415db1']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--494cc382-d0f7-42ef-8dcb-b237003a6312", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "File less PowerShell Launcher", "pattern": "[file:hashes.SHA256 = '99ca71460b7cb4aabde41fed37e647042cfc53bc8dff91aa0a2a28b96c5d2089']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--dfd948a8-7849-4d2a-9c7c-4e84a5d1aa27", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "File less M3_Mini_Rat client stub", "pattern": "[file:hashes.SHA256 = 'e6220dcfa3ebaa19c2ef65ca79ac48a9b2a212e142f37e465adac34c112a8a52']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--b571a038-36db-4861-87f6-06128577f213", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "File less M3_Mini_Rat client stub", "pattern": "[file:hashes.SHA256 = 'e559e603702ed249b5c6d057d71be08a1bdba90a19aceaee15d410985c704dde']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--f07b4268-9f2e-4d8d-9625-f38337aa188d", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "File less M3_Mini_Rat client stub", "pattern": "[file:hashes.SHA256 = '7a826c7755c173d041f48a08deecc5966082ff274f854174c96cee8c4b7d9d08']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--dac9af85-b783-41c4-b5b9-aedaf7f26552", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "PhoenixMiner", "pattern": "[file:hashes.SHA256 = '3a1fa39b47697402df3eaa56b0e765addeb83f244aeb80ee0bcd434ae98ba5c3']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--d7f196b8-945e-47bd-81fb-cc15abebb86c", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "description": "lolMiner", "pattern": "[file:hashes.SHA256 = '2d4adb8e894b22d6c60c3877995ba5e9845ec6005fc95382c395396eb84b1e73']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Payload delivery"}], "labels": ["misp:type=\"sha256\"", "misp:category=\"Payload delivery\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--06be3d6d-1ac8-4bf0-9ddf-3a2e94bb79b0", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "pattern": "[domain-name:value = 'sysnod.duckdns.org']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"hostname\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--cddeb8df-9a62-44c3-b0d7-d0da3743fde7", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "pattern": "[domain-name:value = 'educu.xyz']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"domain\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--3f6df638-9d32-4964-b242-8a813e31fb14", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "pattern": "[network-traffic:dst_ref.type = 'ipv4-addr' AND network-traffic:dst_ref.value = '51.178.39.184']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"ip-dst\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--4495d302-6a0a-4099-b433-cc3d9cb41add", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "pattern": "[url:value = 'http://51.178.39.184/?smd_process_download=1&download_id=90']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--cb2d37ed-16f9-48bf-8e47-f04b885b0f25", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "pattern": "[url:value = 'http://51.178.39.184/kit.bin']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "indicator", "id": "indicator--bb66677b-ccd2-4afa-bae4-32652026fff0", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:55:47.000Z", "modified": "2023-09-06T10:55:47.000Z", "pattern": "[url:value = 'http://51.178.39.184']", "valid_from": "2023-09-06T10:55:47Z", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "Network activity"}], "labels": ["misp:type=\"url\"", "misp:category=\"Network activity\"", "misp:to_ids=\"True\""]}, {"type": "observed-data", "id": "observed-data--875b240a-da45-4a08-9f9c-0c3db10c4f7a", "created_by_ref": "identity--5df15c12-89fc-45a7-9620-0044ac110004", "created": "2023-09-06T10:57:52.000Z", "modified": "2023-09-06T10:57:52.000Z", "first_observed": "2023-09-06T10:57:52Z", "last_observed": "2023-09-06T10:57:52Z", "number_observed": 1, "objects": {"0": {"type": "url", "value": "https://blog.talosintelligence.com/cybercriminals-target-graphic-designers-with-gpu-miners.html"}}, "labels": ["misp:type=\"url\"", "misp:category=\"External analysis\""]}, {"type": "attack-pattern", "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Command and Scripting Interpreter - T1059", "description": "ATT&CK Tactic | Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Command and Scripting Interpreter - T1059\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059"}]}, {"type": "attack-pattern", "id": "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "System Binary Proxy Execution - T1218", "description": "ATT&CK Tactic | Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.\n\nSimilarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"System Binary Proxy Execution - T1218\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1218"}]}, {"type": "attack-pattern", "id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Virtualization/Sandbox Evasion - T1497", "description": "ATT&CK Tactic | Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\n\n", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Virtualization/Sandbox Evasion - T1497\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1497"}]}, {"type": "attack-pattern", "id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Obfuscated Files or Information - T1027", "description": "ATT&CK Tactic | Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also used compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also obfuscate commands executed from payloads or directly via a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Obfuscated Files or Information - T1027\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-267"}]}, {"type": "attack-pattern", "id": "attack-pattern--1b51f5bc-b97a-498a-8dbd-bc6b1901bf19", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Process Discovery - T1424", "description": "ATT&CK Tactic | On Android versions prior to 5, applications can observe information about other processes that are running through methods in the ActivityManager class. On Android versions prior to 7, applications can obtain this information by executing the <code>ps</code> command, or by examining the <code>/proc</code> directory. Starting in Android version 7, use of the Linux kernel's <code>hidepid</code> feature prevents applications (without escalated privileges) from accessing this information (Citation: Android-SELinuxChanges).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Process Discovery - T1424\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1424"}]}, {"type": "attack-pattern", "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Process Injection - T1055", "description": "ATT&CK Tactic | Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Process Injection - T1055\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-640"}]}, {"type": "attack-pattern", "id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Windows Command Shell - T1059.003", "description": "ATT&CK Tactic | Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Windows Command Shell - T1059.003\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1059.003"}]}, {"type": "attack-pattern", "id": "attack-pattern--e4dc8c01-417f-458d-9ee0-bb0617c1b391", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Debugger Evasion - T1622", "description": "ATT&CK Tactic | Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)\n\nDebugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.\n\nSpecific checks will vary based on the target and/or adversary, but may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>IsDebuggerPresent()</code> and <code> NtQueryInformationProcess()</code>, or manually checking the <code>BeingDebugged</code> flag of the Process Environment Block (PEB). Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would \u201cswallow\u201d or handle the potential error).(Citation: hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug)\n\nAdversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>OutputDebugStringW()</code>.(Citation: wardle evilquest partii)(Citation: Checkpoint Dridex Jan 2021)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Debugger Evasion - T1622\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1622"}]}, {"type": "attack-pattern", "id": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Native API - T1106", "description": "ATT&CK Tactic | Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system. While invoking API functions, adversaries may also attempt to bypass defensive tools (ex: unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)).", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Native API - T1106\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1106"}]}, {"type": "attack-pattern", "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Disable or Modify Tools - T1562.001", "description": "ATT&CK Tactic | Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take the many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information.\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Disable or Modify Tools - T1562.001\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-578"}]}, {"type": "attack-pattern", "id": "attack-pattern--f5946b5e-9408-485f-a7f7-b5efc88909b6", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Credential API Hooking - T1056.004", "description": "ATT&CK Tactic | Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Elastic Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored.(Citation: Elastic Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Elastic Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Credential API Hooking - T1056.004\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1056.004"}]}, {"type": "attack-pattern", "id": "attack-pattern--d4536441-1bcc-49fa-80ae-a596ed3f7ffd", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "System Network Configuration Discovery - T1422", "description": "ATT&CK Tactic | On Android, details of onboard network interfaces are accessible to apps through the `java.net.NetworkInterface` class.(Citation: NetworkInterface) The Android `TelephonyManager` class can be used to gather related information such as the IMSI, IMEI, and phone number.(Citation: TelephonyManager)\n\nOn iOS, gathering network configuration information is not possible without root access.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"System Network Configuration Discovery - T1422\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1422"}]}, {"type": "attack-pattern", "id": "attack-pattern--e2ea7f6b-8d4f-49c3-819d-660530d12b77", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "System Information Discovery - T1426", "description": "ATT&CK Tactic | An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, and architecture.\n\nOn Android, much of this information is programmatically accessible to applications through the android.os.Build class.(Citation: Android-Build)\n\nOn iOS, techniques exist for applications to programmatically access this information.(Citation: StackOverflow-iOSVersion)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"System Information Discovery - T1426\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1426"}]}, {"type": "attack-pattern", "id": "attack-pattern--241814ae-de3f-4656-b49e-f9a80764d4b7", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Security Software Discovery - T1063", "description": "ATT&CK Tactic | Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on the system. This may include things such as local firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1063) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\n\n### Windows\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for.\n\n### Mac\n\nIt's becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Security Software Discovery - T1063\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1063"}]}, {"type": "attack-pattern", "id": "attack-pattern--c877e33f-1df6-40d6-b1e7-ce70f16f4979", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "System Location Discovery - T1614", "description": "ATT&CK Tactic | \nAdversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery](https://attack.mitre.org/techniques/T1614) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.(Citation: FBI Ragnar Locker 2020)(Citation: Sophos Geolocation 2016)(Citation: Bleepingcomputer RAT malware 2020) Windows API functions such as <code>GetLocaleInfoW</code> can also be used to determine the locale of the host.(Citation: FBI Ragnar Locker 2020) In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.(Citation: AWS Instance Identity Documents)(Citation: Microsoft Azure Instance Metadata 2021)\n\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.(Citation: Securelist Trasparent Tribe 2020)(Citation: Sophos Geolocation 2016)", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"System Location Discovery - T1614\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1614"}]}, {"type": "attack-pattern", "id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Software Packing - T1027.002", "description": "ATT&CK Tactic | Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  ", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Software Packing - T1027.002\""], "external_references": [{"source_name": "capec", "external_id": "CAPEC-570"}]}, {"type": "attack-pattern", "id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a", "created": "2023-09-06T11:33:31.000Z", "modified": "2023-09-06T11:33:31.000Z", "name": "Archive Collected Data - T1560", "description": "ATT&CK Tactic | An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network. Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.", "kill_chain_phases": [{"kill_chain_name": "misp-category", "phase_name": "mitre-attack-pattern"}], "labels": ["misp:galaxy-name=\"Attack Pattern\"", "misp:galaxy-type=\"mitre-attack-pattern\"", "misp-galaxy:mitre-attack-pattern=\"Archive Collected Data - T1560\""], "external_references": [{"source_name": "mitre-attack", "external_id": "T1560"}]}, {"type": "marking-definition", "id": "marking-definition--613f2e26-407d-48c7-9eca-b8e91df99dc9", "created": "2017-01-20T00:00:00.000Z", "definition_type": "tlp", "definition": {"tlp": "white"}}]}
